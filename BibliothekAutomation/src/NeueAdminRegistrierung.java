
import com.toedter.calendar.JDateChooser;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.border.Border;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


public class NeueAdminRegistrierung extends javax.swing.JFrame {

    /**
     * Creates new form NeueAdminRegistrierung
     */
    public NeueAdminRegistrierung() {
        initComponents();
        
        //nur ein Button sollte selektiert werden, darum erstellte sich eine Buttongruppe und wurde button drin gesteckt.
            ButtonGroup bg =new ButtonGroup();
                bg.add(maenlich);
                bg.add(weiblich);
                bg.add(andere);
        
        //damit User die Geburtsdatum nur durch Klicken von Calendar Form eingeben kann
        JTextFieldDateEditor editor = (JTextFieldDateEditor)NARgeburtsdatumFeld.getDateEditor();
        editor.setEditable(false);
        //damit das Fenster in der Mitte vom Bildschirm stehen bleibt
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        NARnicknameFeld = new javax.swing.JTextField();
        NARvornameFeld = new javax.swing.JTextField();
        NARnachnameFeld = new javax.swing.JTextField();
        NARemailsFeld = new javax.swing.JTextField();
        NARnummerFeld = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        NARkennwortsfeld1 = new javax.swing.JPasswordField();
        NARkennwortsfeld2 = new javax.swing.JPasswordField();
        maenlich = new javax.swing.JRadioButton();
        weiblich = new javax.swing.JRadioButton();
        andere = new javax.swing.JRadioButton();
        registerButton = new javax.swing.JButton();
        NARgeburtsdatumFeld = new com.toedter.calendar.JDateChooser();
        zurück = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Neue Admin Registrierung");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Vorname: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Nachname:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Geburtsdatum:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Geschlecht: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Nickname:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Email: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Handynummer: ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Kennwort:");

        jLabel9.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Desktop\\Tulpar için\\Bachelorarbeit\\Icons & Bilder\\marmara_universitesi_logo.png")); // NOI18N

        NARnicknameFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NARnicknameFeldKeyTyped(evt);
            }
        });

        NARvornameFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NARvornameFeldKeyTyped(evt);
            }
        });

        NARnachnameFeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NARnachnameFeldActionPerformed(evt);
            }
        });
        NARnachnameFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NARnachnameFeldKeyTyped(evt);
            }
        });

        NARemailsFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NARemailsFeldKeyTyped(evt);
            }
        });

        NARnummerFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NARnummerFeldKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Kennwort wieder:");

        NARkennwortsfeld1.setText("Kennwort");
        NARkennwortsfeld1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NARkennwortsfeld1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NARkennwortsfeld1FocusLost(evt);
            }
        });
        NARkennwortsfeld1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NARkennwortsfeld1ActionPerformed(evt);
            }
        });
        NARkennwortsfeld1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NARkennwortsfeld1KeyTyped(evt);
            }
        });

        NARkennwortsfeld2.setText("Kennwort");
        NARkennwortsfeld2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                NARkennwortsfeld2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                NARkennwortsfeld2FocusLost(evt);
            }
        });
        NARkennwortsfeld2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NARkennwortsfeld2KeyTyped(evt);
            }
        });

        maenlich.setText("Männlich");

        weiblich.setText("Weiblich");

        andere.setText("Andere");

        registerButton.setBackground(new java.awt.Color(51, 204, 255));
        registerButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        registerButton.setText("Registrieren");
        registerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerButtonMouseExited(evt);
            }
        });
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        NARgeburtsdatumFeld.setDateFormatString("dd-MM-yyyy");
        NARgeburtsdatumFeld.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        zurück.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Desktop\\Tulpar için\\Bachelorarbeit\\Icons & Bilder\\back.png")); // NOI18N
        zurück.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zurückMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                zurückMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                zurückMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(88, 88, 88)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(NARemailsFeld, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(NARkennwortsfeld2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(NARnicknameFeld)
                                        .addComponent(NARkennwortsfeld1, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                                    .addComponent(NARvornameFeld, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(NARnachnameFeld, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                                    .addComponent(NARgeburtsdatumFeld, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(52, 52, 52))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NARnummerFeld, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 52, Short.MAX_VALUE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(maenlich, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(6, 6, 6)
                            .addComponent(weiblich, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)))
                    .addComponent(andere, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(zurück))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(zurück, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(NARnicknameFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(NARkennwortsfeld1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(NARkennwortsfeld2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NARvornameFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NARnachnameFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(NARgeburtsdatumFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(maenlich)
                    .addComponent(weiblich)
                    .addComponent(andere))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(NARemailsFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(NARnummerFeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(registerButton)
                .addGap(28, 28, 28)
                .addComponent(jLabel9)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NARnicknameFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NARnicknameFeldKeyTyped
        //Hier ermöglicht uns, dass man für einen Nicknamen maximal 20 Karakter benutzen darf.
        if((NARnicknameFeld.getText() + evt.getKeyChar()).length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_NARnicknameFeldKeyTyped

    private void NARkennwortsfeld1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NARkennwortsfeld1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NARkennwortsfeld1ActionPerformed

    private void NARkennwortsfeld1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NARkennwortsfeld1KeyTyped
        //Hier ermöglicht uns, dass man für Kennwort maximal 20 Karakter benutzen darf.
        if((String.valueOf(NARkennwortsfeld1.getPassword())+ evt.getKeyChar()).length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_NARkennwortsfeld1KeyTyped

    private void NARkennwortsfeld2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NARkennwortsfeld2KeyTyped
        //Hier ermöglicht uns, dass man für Kennwort maximal 20 Karakter benutzen darf.
        if((String.valueOf(NARkennwortsfeld2.getPassword()) + evt.getKeyChar()).length() >= 20){
            evt.consume();
        }
    }//GEN-LAST:event_NARkennwortsfeld2KeyTyped

    private void NARvornameFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NARvornameFeldKeyTyped
        //Hier ermöglicht uns, dass man für Vornamen maximal 20 Karakter benutzen darf.
        if((NARvornameFeld.getText() + evt.getKeyChar()).length() >= 20){
            evt.consume();
        }
        //User kann nur Buchstaben beim Vornamefeld benutzen.
        if(!(Character.isAlphabetic(evt.getKeyChar())) || (evt.getKeyChar()==KeyEvent.VK_BACK_SPACE) || (evt.getKeyChar()==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_NARvornameFeldKeyTyped

    private void NARnachnameFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NARnachnameFeldKeyTyped
        //Hier ermöglicht uns, dass man für Vornamen maximal 20 Karakter benutzen darf.
        if((NARnachnameFeld.getText() + evt.getKeyChar()).length() >= 20){
            evt.consume();
        }
        
        //User kann nur Buchstaben beim Nachnamefeld benutzen.
        if(!(Character.isAlphabetic(evt.getKeyChar())) || (evt.getKeyChar()==KeyEvent.VK_BACK_SPACE) || (evt.getKeyChar()==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_NARnachnameFeldKeyTyped

    private void NARnachnameFeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NARnachnameFeldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NARnachnameFeldActionPerformed

    private void NARkennwortsfeld1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NARkennwortsfeld1FocusGained
        if(String.valueOf(NARkennwortsfeld1.getPassword()).toLowerCase().equals("kennwort")){
            NARkennwortsfeld1.setText("");
            NARkennwortsfeld1.setForeground(Color.black);
        }
    }//GEN-LAST:event_NARkennwortsfeld1FocusGained

    private void NARkennwortsfeld1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NARkennwortsfeld1FocusLost
        //damit das Feld in seine älteren Eigenschaften umgewandelt wird.
        String kennwortA = String.valueOf(NARkennwortsfeld1.getPassword());
        if(kennwortA.equals("") || kennwortA.equals("kennwort")){
            NARkennwortsfeld1.setText("Kennwort");
            NARkennwortsfeld1.setForeground(Color.black);
        }
    }//GEN-LAST:event_NARkennwortsfeld1FocusLost

    private void NARkennwortsfeld2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NARkennwortsfeld2FocusGained
        if(String.valueOf(NARkennwortsfeld2.getPassword()).toLowerCase().equals("kennwort")){
            NARkennwortsfeld2.setText("");
            NARkennwortsfeld2.setForeground(Color.black);
        }
    }//GEN-LAST:event_NARkennwortsfeld2FocusGained

    private void NARkennwortsfeld2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_NARkennwortsfeld2FocusLost
        //damit das Feld in seine älteren Eigenschaften umgewandelt wird.
        String kennwortA = String.valueOf(NARkennwortsfeld2.getPassword());
        if(kennwortA.equals("") || kennwortA.equals("kennwort")){
            NARkennwortsfeld2.setText("Kennwort");
            NARkennwortsfeld2.setForeground(Color.black);
        }
    }//GEN-LAST:event_NARkennwortsfeld2FocusLost

    private void NARemailsFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NARemailsFeldKeyTyped
        //Hier ermöglicht uns, dass man für email maximal 40 Karakter benutzen darf.
        if((NARemailsFeld.getText() + evt.getKeyChar()).length() >= 40){
            evt.consume();
        }
    }//GEN-LAST:event_NARemailsFeldKeyTyped

    private void NARnummerFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NARnummerFeldKeyTyped
        //Hier ermöglicht uns, dass man für Handynummer maximal 15 Karakter benutzen darf.
        if((NARnummerFeld.getText() + evt.getKeyChar()).length() >= 15){
            evt.consume();
        }
        
        //Hier erlauben wir den User, dass er nur Nummer als Input eingibt
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_NARnummerFeldKeyTyped

    private void registerButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseEntered
        registerButton.setBackground(new Color(0,100,200));
    }//GEN-LAST:event_registerButtonMouseEntered

    private void registerButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerButtonMouseExited
        registerButton.setBackground(new Color(51,204,255));
    }//GEN-LAST:event_registerButtonMouseExited
    
    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
        
        String nickname = NARnicknameFeld.getText();
            String kennwort = String.valueOf(NARkennwortsfeld1.getPassword());
            String kennwort2 = String.valueOf(NARkennwortsfeld2.getPassword());
        String vorname = NARvornameFeld.getText();
        String nachname = NARnachnameFeld.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            //String geburtsdatum = dateFormat.format(NARgeburtsdatumFeld.getDate());
        String geschlecht = "männlich";
        if(weiblich.isSelected()){
            geschlecht = "weiblich";
        }
        else if(andere.isSelected()){
            geschlecht = "andere";
        }
        String email = NARemailsFeld.getText();
        String handynummer = NARnummerFeld.getText();
        
        if(InputPrüfen()){
            if (kennwort.equals("kennwort") || kennwort2.equals("kennwort")) {
                JOptionPane.showMessageDialog(null, "Bitte ändern Sie Ihren Kennwort!","Kennwortänderung",2);
            }else{
                if(!UserExistenzPrüfen(nickname)){
                    PreparedStatement st; 
                    ResultSet rs;

                    String SQLAnfrage = "INSERT INTO `admin` (`nickname`,`kennwort`,`vorname`,`nachname`,`geburtsdatum`,`geschlecht`,`email`,`handynummer`) VALUES(?,?,?,?,?,?,?,?)";

                try {
                    st = dBVerbindung.getConnection().prepareStatement(SQLAnfrage);

                    st.setString(1, nickname);
                    st.setString(2, kennwort);
                    st.setString(3, vorname);
                    st.setString(4, nachname);
                    st.setString(5, dateFormat.format(NARgeburtsdatumFeld.getDate()));
                    st.setString(6, geschlecht);
                    st.setString(7, email);
                    st.setString(8, handynummer);

                    if(st.executeUpdate()!=0){
                        JOptionPane.showMessageDialog(null, "Neuer Admin wurde erstellt!");
                        dispose();
                        new Weiterleitungsfenster().setVisible(true);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Etwas ist schiefgelaufen!","Fehlerhafte Transaktion",2);
                    FelderSauberMachen();
                }
                }
            }
          }
         
    }//GEN-LAST:event_registerButtonActionPerformed

    private void zurückMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zurückMouseEntered
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        zurück.setBorder(border);
    }//GEN-LAST:event_zurückMouseEntered

    private void zurückMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zurückMouseExited
        zurück.setBorder(null);
    }//GEN-LAST:event_zurückMouseExited

    private void zurückMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zurückMouseClicked
        dispose();
        new Weiterleitungsfenster().setVisible(true);
    }//GEN-LAST:event_zurückMouseClicked
    
    //Hier wird nachgeprüft, ob Inputs vollständig und Kennworte übereinstimmend erfüllt sind.
    boolean InputPrüfen(){
        String nickname = NARnicknameFeld.getText();
        String kennwort = String.valueOf(NARkennwortsfeld1.getPassword());
        String kennwort2 = String.valueOf(NARkennwortsfeld2.getPassword());
        String vorname = NARvornameFeld.getText();
        String nachname = NARnachnameFeld.getText();
        String geschlecht = "männlich";
        if(weiblich.isSelected()){
            geschlecht = "weiblich";
        }
        else if(andere.isSelected()){
            geschlecht = "andere";
        }
        String email = NARemailsFeld.getText();
        String handynummer = NARnummerFeld.getText();
        
        if(nickname.trim().equals("") || (vorname.trim().equals("")) || nachname.trim().equals("") || NARgeburtsdatumFeld.getDate()==null
           || email.trim().equals("") || handynummer.trim().equals("")){
            JOptionPane.showMessageDialog(null, "Jedes Feld muss vollständig erfüllt werden!","FEHLER bei Input",2);
            FelderSauberMachen();
            return false;
        }
        else if(!kennwort.equals(kennwort2)){
            JOptionPane.showMessageDialog(null, "Kennworte stimmen nicht überein!","FEHLER bei Kennwort",2);
            FelderSauberMachen();
            return false;
        }
        else{
            return true;
        }
    }
    
    boolean UserExistenzPrüfen(String nickname){
        boolean user_existenz = false;
        
        PreparedStatement st;
        ResultSet rs;
        
        String SQLAnfrage = "SELECT * FROM admin WHERE nickname=?";
        
        try {
            st = dBVerbindung.getConnection().prepareStatement(SQLAnfrage);
            st.setString(1, nickname);
            rs = st.executeQuery();
            
            if(rs.next()){
                user_existenz = true;
                JOptionPane.showMessageDialog(null, "Dieser Nickname war schon genommen worden bitte wählen Sie sich ein anderes!","Nickname Fehler",2);
                NARnicknameFeld.setText("");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return user_existenz;
    }
    
    //Durch diese Methode werden die Inputs bei Felder gelöscht
    void FelderSauberMachen(){
        NARnicknameFeld.setText("");
        NARkennwortsfeld1.setText("kennwort");
        NARkennwortsfeld2.setText("kennwort");
        NARvornameFeld.setText("");
        NARnachnameFeld.setText("");
        NARgeburtsdatumFeld.setDate(null);
        /*
            //um das heutige Datum zu bekommen
            String pattern = "dd-MM-yyyy";
            String dateInString =new SimpleDateFormat(pattern).format(new java.util.Date());  
        NARgeburtsdatumFeld.setDate(new SimpleDateFormat("dd-MM-yyyy").parse(dateInString));  
        */
        maenlich.setSelected(true);
        NARemailsFeld.setText("");
        NARnummerFeld.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NeueAdminRegistrierung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NeueAdminRegistrierung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NeueAdminRegistrierung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NeueAdminRegistrierung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NeueAdminRegistrierung().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NARemailsFeld;
    private com.toedter.calendar.JDateChooser NARgeburtsdatumFeld;
    private javax.swing.JPasswordField NARkennwortsfeld1;
    private javax.swing.JPasswordField NARkennwortsfeld2;
    private javax.swing.JTextField NARnachnameFeld;
    private javax.swing.JTextField NARnicknameFeld;
    private javax.swing.JTextField NARnummerFeld;
    private javax.swing.JTextField NARvornameFeld;
    private javax.swing.JRadioButton andere;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton maenlich;
    private javax.swing.JButton registerButton;
    private javax.swing.JRadioButton weiblich;
    private javax.swing.JLabel zurück;
    // End of variables declaration//GEN-END:variables
}
