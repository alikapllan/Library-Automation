
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.border.Border;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.*;
import javax.swing.table.*;

public class Bibliothek extends javax.swing.JFrame {
    //JTable table;
    BibliothekColumns ausgewaehlte_buch;
    DefaultTableModel model;
    /**
     * Creates new form Bibliothek
     */
    public Bibliothek() {
        initComponents();
        
        dBVerbindung.getConnection();
        //Bücherdaten live zeigen
        bücherdaten_live_zeigen();
        
        //damit User das Auflagedatum nur durch Klicken von Calendar Form eingeben kann
        JTextFieldDateEditor editor = (JTextFieldDateEditor)BAuflagesdatumsfeld.getDateEditor();
        editor.setEditable(false);
        
        //damit das Fenster in der Mitte vom Bildschirm stehen bleibt
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BVerlagsFeld = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        BNamevonBuchsFeld = new javax.swing.JTextField();
        BThemaFeld = new javax.swing.JTextField();
        BAutorsFeld = new javax.swing.JTextField();
        BdatenLöschenButton = new javax.swing.JButton();
        BdatenAktualisierenButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BibliothekTabelle = new javax.swing.JTable();
        BBuchLeihenButton = new javax.swing.JButton();
        BBuchZNehmenButton = new javax.swing.JButton();
        BBuchHinzufügenButton = new javax.swing.JButton();
        zurück = new javax.swing.JLabel();
        BAuflagesdatumsfeld = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        BBuchIDfeld = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        buchSuchenFeld = new javax.swing.JTextField();
        refreshIcon = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bibliothek");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BVerlagsFeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BVerlagsFeldActionPerformed(evt);
            }
        });
        BVerlagsFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BVerlagsFeldKeyTyped(evt);
            }
        });
        getContentPane().add(BVerlagsFeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 243, 160, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Auflagesdatum:");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 165, 140, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Thema/Betreff:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 200, 170, 22));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Verlag:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 243, 159, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Name von Buch:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 89, 170, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Author:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 127, 140, -1));

        BNamevonBuchsFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BNamevonBuchsFeldKeyTyped(evt);
            }
        });
        getContentPane().add(BNamevonBuchsFeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 89, 160, -1));

        BThemaFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BThemaFeldKeyTyped(evt);
            }
        });
        getContentPane().add(BThemaFeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 160, -1));

        BAutorsFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                BAutorsFeldKeyTyped(evt);
            }
        });
        getContentPane().add(BAutorsFeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 124, 158, -1));

        BdatenLöschenButton.setBackground(new java.awt.Color(51, 204, 255));
        BdatenLöschenButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BdatenLöschenButton.setText("Daten Löschen");
        BdatenLöschenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BdatenLöschenButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BdatenLöschenButtonMouseExited(evt);
            }
        });
        BdatenLöschenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdatenLöschenButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BdatenLöschenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 337, 145, -1));

        BdatenAktualisierenButton.setBackground(new java.awt.Color(51, 204, 255));
        BdatenAktualisierenButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BdatenAktualisierenButton.setText("Daten Aktualisieren");
        BdatenAktualisierenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BdatenAktualisierenButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BdatenAktualisierenButtonMouseExited(evt);
            }
        });
        BdatenAktualisierenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BdatenAktualisierenButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BdatenAktualisierenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 337, 145, -1));

        BibliothekTabelle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Buch ID", "Name von Buch", "Author", "Auflagesdatum", "Thema/Betreff", "Verlag"
            }
        ));
        BibliothekTabelle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BibliothekTabelleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(BibliothekTabelle);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 45, 700, 400));

        BBuchLeihenButton.setBackground(new java.awt.Color(51, 204, 255));
        BBuchLeihenButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BBuchLeihenButton.setText("Buch Leihen");
        BBuchLeihenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BBuchLeihenButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BBuchLeihenButtonMouseExited(evt);
            }
        });
        BBuchLeihenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBuchLeihenButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BBuchLeihenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 378, 145, -1));

        BBuchZNehmenButton.setBackground(new java.awt.Color(51, 204, 255));
        BBuchZNehmenButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BBuchZNehmenButton.setText("Buch Zurücknehmen");
        BBuchZNehmenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BBuchZNehmenButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BBuchZNehmenButtonMouseExited(evt);
            }
        });
        BBuchZNehmenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBuchZNehmenButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BBuchZNehmenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 378, -1, -1));

        BBuchHinzufügenButton.setBackground(new java.awt.Color(51, 204, 255));
        BBuchHinzufügenButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        BBuchHinzufügenButton.setText("Buch hinzufügen");
        BBuchHinzufügenButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BBuchHinzufügenButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                BBuchHinzufügenButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                BBuchHinzufügenButtonMouseExited(evt);
            }
        });
        BBuchHinzufügenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BBuchHinzufügenButtonActionPerformed(evt);
            }
        });
        getContentPane().add(BBuchHinzufügenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(142, 296, 145, -1));

        zurück.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Desktop\\Tulpar için\\Bachelorarbeit\\Icons & Bilder\\back.png")); // NOI18N
        zurück.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zurückMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                zurückMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                zurückMouseExited(evt);
            }
        });
        getContentPane().add(zurück, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        BAuflagesdatumsfeld.setDateFormatString("dd-MM-yyyy");
        getContentPane().add(BAuflagesdatumsfeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 162, 160, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Buch ID:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 51, 170, -1));

        BBuchIDfeld.setEnabled(false);
        getContentPane().add(BBuchIDfeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 51, 160, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Buch Suchen");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(427, 19, 108, -1));

        buchSuchenFeld.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buchSuchenFeldKeyReleased(evt);
            }
        });
        getContentPane().add(buchSuchenFeld, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 19, 580, -1));

        refreshIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\pc\\Desktop\\Tulpar için\\Bachelorarbeit\\Icons & Bilder\\refresh.png")); // NOI18N
        refreshIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refreshIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refreshIconMouseExited(evt);
            }
        });
        getContentPane().add(refreshIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, 30, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BVerlagsFeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BVerlagsFeldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BVerlagsFeldActionPerformed

    private void BVerlagsFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BVerlagsFeldKeyTyped
        //Hier ermöglicht uns, dass man für Vornamen maximal 20 Karakter benutzen darf.
        if((BVerlagsFeld.getText() + evt.getKeyChar()).length() >= 30){
            evt.consume();
        }
    }//GEN-LAST:event_BVerlagsFeldKeyTyped

    private void BNamevonBuchsFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BNamevonBuchsFeldKeyTyped
        //Hier ermöglicht uns, dass man für einen Nicknamen maximal 20 Karakter benutzen darf.
        if((BNamevonBuchsFeld.getText() + evt.getKeyChar()).length() >= 30){
            evt.consume();
        }
    }//GEN-LAST:event_BNamevonBuchsFeldKeyTyped

    private void BThemaFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BThemaFeldKeyTyped
        //Hier ermöglicht uns, dass man für Vornamen maximal 20 Karakter benutzen darf.
        if((BThemaFeld.getText() + evt.getKeyChar()).length() >= 30){
            evt.consume();
        }
        
        //User kann nur Buchstaben beim Themafeld benutzen.
        if(!(Character.isAlphabetic(evt.getKeyChar())) || (evt.getKeyChar()==KeyEvent.VK_BACK_SPACE) || (evt.getKeyChar()==KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_BThemaFeldKeyTyped

    private void BdatenAktualisierenButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BdatenAktualisierenButtonMouseExited
        BdatenAktualisierenButton.setBackground(new Color(51,204,255));
    }//GEN-LAST:event_BdatenAktualisierenButtonMouseExited

    private void BdatenAktualisierenButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BdatenAktualisierenButtonMouseEntered
        BdatenAktualisierenButton.setBackground(new Color(0,100,200));
    }//GEN-LAST:event_BdatenAktualisierenButtonMouseEntered

    private void BdatenLöschenButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BdatenLöschenButtonMouseExited
        BdatenLöschenButton.setBackground(new Color(51,204,255));
    }//GEN-LAST:event_BdatenLöschenButtonMouseExited

    private void BdatenLöschenButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BdatenLöschenButtonMouseEntered
        BdatenLöschenButton.setBackground(new Color(0,100,200));
    }//GEN-LAST:event_BdatenLöschenButtonMouseEntered

    private void BBuchLeihenButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BBuchLeihenButtonMouseEntered
        BBuchLeihenButton.setBackground(new Color(0,100,200));
    }//GEN-LAST:event_BBuchLeihenButtonMouseEntered

    private void BBuchLeihenButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BBuchLeihenButtonMouseExited
        BBuchLeihenButton.setBackground(new Color(51,204,255));
    }//GEN-LAST:event_BBuchLeihenButtonMouseExited

    private void BBuchLeihenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBuchLeihenButtonActionPerformed
        if(!BBuchIDfeld.getText().isEmpty()){
            if(InputPrüfen()){
                int buchID = Integer.valueOf(BBuchIDfeld.getText());
                String name = BNamevonBuchsFeld.getText();
                String author = BAutorsFeld.getText();
                    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                String thema = BThemaFeld.getText();
                String verlag = BVerlagsFeld.getText();

                Studentnummer sn_objekt = new Studentnummer();
                sn_objekt.buchLeihenColumns_objekt = new BuchLeihenColumns2(buchID,name,author,dateFormat.format(BAuflagesdatumsfeld.getDate()),thema,verlag);
                try {
                    PreparedStatement st;
                    ResultSet rs;

                    String SQLAnfrage = "DELETE FROM buch WHERE buchID=?";

                    st = dBVerbindung.getConnection().prepareStatement(SQLAnfrage);
                    st.setInt(1, Integer.valueOf(BBuchIDfeld.getText()));
                    st.executeUpdate();
                    FelderSauberMachen();
                    
                } catch (Exception e) {
                    System.out.println(e);
                }
                FelderSauberMachen();
                bücherdaten_live_zeigen();
                dispose();
                new Studentnummer().setVisible(true);
            }
        }else{
            JOptionPane.showMessageDialog(null, "Buch hat kein ID. Wählen Sie ein Buch aus der Tabelle rechts!","Buch Kein ID",2);
            FelderSauberMachen();
        }
        
    }//GEN-LAST:event_BBuchLeihenButtonActionPerformed

    private void BBuchZNehmenButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BBuchZNehmenButtonMouseEntered
        BBuchZNehmenButton.setBackground(new Color(0,100,200));
    }//GEN-LAST:event_BBuchZNehmenButtonMouseEntered

    private void BBuchZNehmenButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BBuchZNehmenButtonMouseExited
        BBuchZNehmenButton.setBackground(new Color(51,204,255));
    }//GEN-LAST:event_BBuchZNehmenButtonMouseExited

    private void BBuchZNehmenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBuchZNehmenButtonActionPerformed
        dispose();
        new BuchLeihen().setVisible(true);
    }//GEN-LAST:event_BBuchZNehmenButtonActionPerformed

    private void BBuchHinzufügenButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BBuchHinzufügenButtonMouseEntered
        BBuchHinzufügenButton.setBackground(new Color(0,100,200));
    }//GEN-LAST:event_BBuchHinzufügenButtonMouseEntered

    private void BBuchHinzufügenButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BBuchHinzufügenButtonMouseExited
        BBuchHinzufügenButton.setBackground(new Color(51,204,255));
    }//GEN-LAST:event_BBuchHinzufügenButtonMouseExited

    private void BAutorsFeldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_BAutorsFeldKeyTyped
        //Hier ermöglicht uns, dass man für Vornamen maximal 20 Karakter benutzen darf.
        if((BAutorsFeld.getText() + evt.getKeyChar()).length() >= 40){
            evt.consume();
        }
    }//GEN-LAST:event_BAutorsFeldKeyTyped

    private void zurückMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zurückMouseEntered
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black);
        zurück.setBorder(border);
    }//GEN-LAST:event_zurückMouseEntered

    private void zurückMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zurückMouseExited
        zurück.setBorder(null);
    }//GEN-LAST:event_zurückMouseExited

    private void zurückMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zurückMouseClicked
        dispose();
        new Weiterleitungsfenster().setVisible(true);
    }//GEN-LAST:event_zurückMouseClicked

    private void BibliothekTabelleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BibliothekTabelleMouseClicked
        try {
            //bücherdaten_inLücken_übertragen(index);
            bücherdaten_inLücken_übertragen2();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_BibliothekTabelleMouseClicked

    private void BdatenLöschenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdatenLöschenButtonActionPerformed
       if(!BBuchIDfeld.getText().isEmpty()){
           try {
                PreparedStatement st;
                ResultSet rs;

                String SQLAnfrage = "DELETE FROM buch WHERE buchID=?";

                st = dBVerbindung.getConnection().prepareStatement(SQLAnfrage);
                st.setInt(1, Integer.valueOf(BBuchIDfeld.getText()));
                st.executeUpdate();
                //!!!!!!!!!!!!!!!!!//
                    bücherdaten_live_zeigen();
                    FelderSauberMachen();
                JOptionPane.showMessageDialog(null, "Bücherdaten sind gelöscht!");
                
                //!!
           } catch (Exception e) {
           }
           
       }else{
           JOptionPane.showMessageDialog(null, "zu löschende Bücherdaten wurden im System nicht gefunden","FEHLER",2);
           FelderSauberMachen();
       }
    }//GEN-LAST:event_BdatenLöschenButtonActionPerformed

    private void BBuchHinzufügenButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BBuchHinzufügenButtonMouseClicked
        
    }//GEN-LAST:event_BBuchHinzufügenButtonMouseClicked

    private void BBuchHinzufügenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BBuchHinzufügenButtonActionPerformed
        String name = BNamevonBuchsFeld.getText();
        String author = BAutorsFeld.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
            //diese Objeckt verursacht Problem //javanullpointerexception // wir senden so : dateFormat.format(BAuflagesdatumsfeld.getDate())
            //String auflagesdatum = dateFormat.format(BAuflagesdatumsfeld.getDate());
        String thema = BThemaFeld.getText();
        String verlag = BVerlagsFeld.getText();
        
        if (BBuchIDfeld.getText().isEmpty()) {
            if(InputPrüfen()){
                PreparedStatement st;
                ResultSet rs;

                String SQLAnfrage = "INSERT INTO `buch` (`buchname`,`author`,`auflagesdatum`,`thema`,`verlag`) VALUES(?,?,?,?,?)";

                try {
                    st = dBVerbindung.getConnection().prepareStatement(SQLAnfrage);

                    st.setString(1, name);
                    st.setString(2, author);
                    st.setString(3, dateFormat.format(BAuflagesdatumsfeld.getDate()));
                    st.setString(4, thema);
                    st.setString(5, verlag);

                    //prüfen ob daten erfolgreich in System gespeichert werden
                    if(st.executeUpdate()!=0){
                        JOptionPane.showMessageDialog(null, "Bücherdaten wurde erfolgreich erstellt!");
                        bücherdaten_live_zeigen();
                        FelderSauberMachen();
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Etwas ist schiefgelaufen!","Fehlerhafte Transaktion",2);
                    FelderSauberMachen();
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Es gibt ein Buch, das sich schon im System befindet!","FEHLER",2);
            FelderSauberMachen();
        }
            
    }//GEN-LAST:event_BBuchHinzufügenButtonActionPerformed

    private void BdatenAktualisierenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BdatenAktualisierenButtonActionPerformed
        if (InputPrüfen()) {
            if(!BBuchIDfeld.getText().isEmpty()){
                try {
                    PreparedStatement st;
                    ResultSet rs;

                    String SQLAnfrage = "UPDATE buch SET buchname=? , author=? , auflagesdatum=? , thema=? , verlag=? WHERE buchID=?";
                    
                    st = dBVerbindung.getConnection().prepareCall(SQLAnfrage);
                    SimpleDateFormat dateFormat  = new SimpleDateFormat("dd-MM-yyyy");
                    
                    st.setString(1, BNamevonBuchsFeld.getText());
                    st.setString(2, BAutorsFeld.getText());
                    st.setString(3, dateFormat.format(BAuflagesdatumsfeld.getDate()));
                    st.setString(4, BThemaFeld.getText());
                    st.setString(5, BVerlagsFeld.getText());
                    st.setInt(6, Integer.valueOf(BBuchIDfeld.getText()));
                    
                    st.executeUpdate();
                        bücherdaten_live_zeigen();
                        FelderSauberMachen();
                    JOptionPane.showMessageDialog(null, "Bücherdaten wurden erfolgreich aktualisiert!");
                        
                } catch (Exception e) {
                }
            }else{
                JOptionPane.showMessageDialog(null, "zu aktualisierende Bücherdaten wurden im System nicht gefunden!","FEHLER",2);
                FelderSauberMachen();
            }
        }
    }//GEN-LAST:event_BdatenAktualisierenButtonActionPerformed

    private void buchSuchenFeldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buchSuchenFeldKeyReleased
        String suchSchlüssel = buchSuchenFeld.getText();
        
        BuchSuchen(suchSchlüssel);
    }//GEN-LAST:event_buchSuchenFeldKeyReleased

    private void refreshIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshIconMouseClicked
        FelderSauberMachen();
    }//GEN-LAST:event_refreshIconMouseClicked

    private void refreshIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshIconMouseEntered
        Border border = BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK);
        refreshIcon.setBorder(border);
    }//GEN-LAST:event_refreshIconMouseEntered

    private void refreshIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshIconMouseExited
        refreshIcon.setBorder(null);
    }//GEN-LAST:event_refreshIconMouseExited
    //Durch diese Methode unten sortieren wir die Tabelle,je nachdem und sobald eine buchstabe oder zeichnen in buchSuchenFeld eingegeben ist
    void BuchSuchen(String suchSchlüssel){
        
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<DefaultTableModel>((DefaultTableModel)BibliothekTabelle.getModel());
        sorter.setRowFilter(RowFilter.regexFilter(suchSchlüssel));
        BibliothekTabelle.setRowSorter(sorter);
        
    }    
    //Hier wird nachgeprüft, ob Inputs vollständig übereinstimmend erfüllt sind.
    boolean InputPrüfen(){
        String name = BNamevonBuchsFeld.getText();
        String author = BAutorsFeld.getText();
        boolean datum = BAuflagesdatumsfeld.getDate()==null;
        String thema = BThemaFeld.getText();
        String verlag = BVerlagsFeld.getText();
        
        if(name.trim().equals("") || (author.trim().equals("")) || thema.trim().equals("") || verlag.trim().equals("") || datum){
            JOptionPane.showMessageDialog(null, "Jedes Feld muss vollständig erfüllt werden!","FEHLER bei Input",2);
            FelderSauberMachen();
            return false;
        }else{
            return true;
        }
    }
    /*
    void bücherdaten_inLücken_übertragen(int index){
        try {
            BBuchIDfeld.setText(String.valueOf(getBücherDaten().get(index).getBuchID()));
            BNamevonBuchsFeld.setText(getBücherDaten().get(index).getBuchname());
            BAutorsFeld.setText(getBücherDaten().get(index).getAuthor());
            BThemaFeld.setText(getBücherDaten().get(index).getThema());
            BVerlagsFeld.setText(getBücherDaten().get(index).getVerlag());
            
            //auflagesdatum --causing an error
            SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");
            //String to date
            java.util.Date dateDatum =  format.parse(getBücherDaten().get(index).getAuflagesdatum());
            //java util date to sql date
            java.sql.Date sqlDatum = new java.sql.Date(dateDatum.getTime());
                //Date datum = (Date) new SimpleDateFormat("dd-MM-yyyy").parse((String)getBücherDaten().get(index).getAuflagesdatum());
            BAuflagesdatumsfeld.setDate(sqlDatum);
            
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    */
    void bücherdaten_inLücken_übertragen2(){
        try { 
            DefaultTableModel tableModel = (DefaultTableModel)BibliothekTabelle.getModel();
            
            int row = BibliothekTabelle.getSelectedRow();
            
            BBuchIDfeld.setText(String.valueOf(tableModel.getDataVector().elementAt(BibliothekTabelle.convertRowIndexToModel(row)).get(0)));
            BNamevonBuchsFeld.setText(String.valueOf(tableModel.getDataVector().elementAt(BibliothekTabelle.convertRowIndexToModel(row)).get(1)));
            BAutorsFeld.setText(String.valueOf(tableModel.getDataVector().elementAt(BibliothekTabelle.convertRowIndexToModel(row)).get(2)));
            BThemaFeld.setText(String.valueOf(tableModel.getDataVector().elementAt(BibliothekTabelle.convertRowIndexToModel(row)).get(4)));
            BVerlagsFeld.setText(String.valueOf(tableModel.getDataVector().elementAt(BibliothekTabelle.convertRowIndexToModel(row)).get(5))); 
            
            //auflagesdatum --causing an error
            SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");
            //String to date
            java.util.Date dateDatum =  format.parse(String.valueOf(tableModel.getDataVector().elementAt(BibliothekTabelle.convertRowIndexToModel(row)).get(3)));
            //java util date to sql date
            java.sql.Date sqlDatum = new java.sql.Date(dateDatum.getTime());
            //Date datum = (Date) new SimpleDateFormat("dd-MM-yyyy").parse((String)getBücherDaten().get(index).getAuflagesdatum());
            BAuflagesdatumsfeld.setDate(sqlDatum);
            
        } catch (Exception e) {
            
        }
    }
    ArrayList<BibliothekColumns> getBücherDaten(){
        //hier speichern wir die ganzen Bücherdaten
        ArrayList<BibliothekColumns> bücher = new ArrayList<>();
        
        PreparedStatement st;
        ResultSet rs;
        
        String SQLAnfrage = "SELECT * FROM buch";
        try {
            st = dBVerbindung.getConnection().prepareStatement(SQLAnfrage);
            rs = st.executeQuery();
            
            //eine Objekt von der Klasse BibliothekColumns, damit die sich im System befundenen Bücherdaten gespeichert werden
            BibliothekColumns buch;
            
            while(rs.next()){
                
                buch = new BibliothekColumns(rs.getInt("buchID"), rs.getString("buchname"),rs.getString("author"),rs.getString("auflagesdatum")
                    , rs.getString("thema"),rs.getString("verlag"));
                bücher.add(buch);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return bücher;
    }
    void bücherdaten_live_zeigen(){
        try {
            ArrayList<BibliothekColumns> bücher_list = getBücherDaten();
            DefaultTableModel model = (DefaultTableModel)BibliothekTabelle.getModel();
                model.setRowCount(0);
            Object[] row = new Object[6];
            
            for(int i=0; i<bücher_list.size();i++){
                row[0] = bücher_list.get(i).getBuchID();
                row[1] = bücher_list.get(i).getBuchname();
                row[2] = bücher_list.get(i).getAuthor();
                row[3] = bücher_list.get(i).getAuflagesdatum();
                row[4] = bücher_list.get(i).getThema();
                row[5] = bücher_list.get(i).getVerlag();
                
                //durch die Methode unten, zeigen wir die Bücherdaten rechtzeitig
                model.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    void FelderSauberMachen(){
        BBuchIDfeld.setText("");
        BNamevonBuchsFeld.setText("");
        BAutorsFeld.setText("");
        BAuflagesdatumsfeld.setDate(null);
        BThemaFeld.setText("");
        BVerlagsFeld.setText("");
    }
    
    //
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bibliothek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bibliothek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bibliothek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bibliothek.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bibliothek().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static com.toedter.calendar.JDateChooser BAuflagesdatumsfeld;
    public static javax.swing.JTextField BAutorsFeld;
    private javax.swing.JButton BBuchHinzufügenButton;
    public javax.swing.JTextField BBuchIDfeld;
    private javax.swing.JButton BBuchLeihenButton;
    private javax.swing.JButton BBuchZNehmenButton;
    public static javax.swing.JTextField BNamevonBuchsFeld;
    public static javax.swing.JTextField BThemaFeld;
    public static javax.swing.JTextField BVerlagsFeld;
    private javax.swing.JButton BdatenAktualisierenButton;
    private javax.swing.JButton BdatenLöschenButton;
    public javax.swing.JTable BibliothekTabelle;
    private javax.swing.JTextField buchSuchenFeld;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel refreshIcon;
    private javax.swing.JLabel zurück;
    // End of variables declaration//GEN-END:variables

}
